import 'package:postgres_migration/postgres_migration.dart';

final Map<String, Map<String, List<Column>>> columnTestData = {
  "Table Without Columns": {"simple": []},
  "Numeric Columns": {
    "Simple": [
      SmallIntColumn('small_int_column'),
      IntegerColumn('int_column'),
      BigIntColumn('big_int_column'),
      SmallSerialColumn('small_serial_column)'),
      SerialColumn('serial_column)'),
      BigSerialColumn('big_serial_column)'),
      FloatColumn('float_column'),
      DoublePrecisionColumn('double_column'),
      NumericColumn('numeric_column'),
      DecimalColumn('decimal_column'),
      RealColumn('real_column'),
      SmallIntColumn.array('small_int_column_array'),
      IntegerColumn.array('int_column_array'),
      BigIntColumn.array('big_int_column_array'),
      FloatColumn.array('float_column_array'),
      DoublePrecisionColumn.array('double_column_array'),
      NumericColumn.array('numeric_column_array'),
      DecimalColumn.array('decimal_column_array'),
      RealColumn.array('real_column_array'),
    ],
    "With Arguments": [
      SmallIntColumn('small_int_column'),
      IntegerColumn('int_column'),
      BigIntColumn('big_int_column'),
      SmallSerialColumn('small_serial_column)'),
      SerialColumn('serial_column)'),
      BigSerialColumn('big_serial_column)'),
      FloatColumn('float_column', precision: 4),
      DoublePrecisionColumn('double_column'),
      NumericColumn('numeric_column', precision: 4, scale: 2),
      DecimalColumn('decimal_column', precision: 4, scale: 2),
      RealColumn('real_column'),
      FloatColumn.array('float_column_array', precision: 6),
      NumericColumn.array('numeric_column_array', precision: 8, scale: 3),
      DecimalColumn.array('decimal_column_array', precision: 8, scale: 4),
    ],
    "With Default": [
      SmallIntColumn('small_int_column', defaultValue: 3),
      IntegerColumn('int_column', defaultValue: 3),
      BigIntColumn('big_int_column', defaultValue: 3),
      SmallSerialColumn('small_serial_column)'),
      SerialColumn('serial_column)'),
      BigSerialColumn('big_serial_column)'),
      FloatColumn('float_column', precision: 4, defaultValue: 1.1),
      DoublePrecisionColumn('double_column', defaultValue: 2),
      NumericColumn('numeric_column',
          precision: 4, scale: 2, defaultValue: 2.2),
      DecimalColumn('decimal_column', precision: 4, scale: 2, defaultValue: 4),
      RealColumn('real_column', defaultValue: 1.555),
      SmallIntColumn.array('small_int_column_array', defaultArrayValue: [1, 2]),
      IntegerColumn.array('int_column_array', defaultArrayValue: [1, 2]),
      BigIntColumn.array('big_int_column_array', defaultArrayValue: [1, 2]),
      FloatColumn.array('float_column_array', defaultArrayValue: [1.4, 2]),
      DoublePrecisionColumn.array('double_column_array',
          defaultArrayValue: [1.2, 2]),
      NumericColumn.array('numeric_column_array', defaultArrayValue: [1.2, 2]),
      DecimalColumn.array('decimal_column_array', defaultArrayValue: [1.2, 2]),
      RealColumn.array('real_column_array', defaultArrayValue: [1.2, 2]),
    ],
    "With Constraints": [
      SmallIntColumn('small_int_column', isNullable: true),
      IntegerColumn('int_column', isPrimaryKey: true),
      BigIntColumn('big_int_column', isUnique: true),
      SmallSerialColumn('small_serial_column)', isUnique: true),
      SerialColumn('serial_column'),
      BigSerialColumn('big_serial_column)'),
      FloatColumn(
        'float_column',
        isUnique: true,
      ),
      DoublePrecisionColumn(
        'double_column',
        isUnique: true,
      ),
      NumericColumn('numeric_column', isUnique: true),
      DecimalColumn('decimal_column', isUnique: true),
      RealColumn('real_column', isUnique: true),
      SmallIntColumn.array('small_int_column_array', isUnique: true),
      IntegerColumn.array('int_column_array', isNullable: false),
      BigIntColumn.array('big_int_column_array', isUnique: true),
      FloatColumn.array('float_column_array', isUnique: true),
      DoublePrecisionColumn.array('double_column_array', isUnique: true),
      NumericColumn.array('numeric_column_array', isUnique: true),
      DecimalColumn.array('decimal_column_array', isUnique: true),
      RealColumn.array('real_column_array', isUnique: true),
    ],
  },
  "Text Columns": {
    "Simple": [
      TextColumn("text_column"),
      CharColumn("char_column"),
      VarcharColumn("varchar_column"),
      TextColumn.array("text_column_array"),
      CharColumn.array("char_column_array"),
      VarcharColumn.array("varchar_column_array"),
    ],
    "With Arguments": [
      TextColumn("text_column"),
      CharColumn("char_column", length: 16),
      VarcharColumn("varchar_column", maxLength: 12),
      CharColumn.array("char_column_array", length: 16),
      VarcharColumn.array("varchar_column_array", maxLength: 12),
    ],
    "With Default": [
      TextColumn("text_column", defaultValue: "my default"),
      CharColumn("char_column", length: 10, defaultValue: "my default"),
      VarcharColumn("varchar_column", defaultValue: "my default"),
      TextColumn.array("text_column_array",
          defaultArrayValue: ["my default", "my default"]),
      CharColumn.array("char_column_array", length: 10,
          defaultArrayValue: ["my default", "my default"]),
      VarcharColumn.array("varchar_column_array",
          defaultArrayValue: ["my default", "my default"]),
    ],
    "With Constraints": [
      TextColumn("text_column", isNullable: false),
      CharColumn("char_column", isUnique: true, isNullable: true),
      VarcharColumn("varchar_column", isUnique: true),
      TextColumn.array("text_column_array", isNullable: true),
      CharColumn.array("char_column_array", isUnique: true),
      VarcharColumn.array("varchar_column_array",
          isPrimaryKey: true, isUnique: true),
    ],
  },
  "Boolean Columns": {
    "Simple": [
      BooleanColumn("bool_column"),
      BooleanColumn.array("bool_column_array"),
    ],
    "With Default": [
      BooleanColumn("bool_column", defaultValue: true),
      BooleanColumn("bool_column_2", defaultValue: false),
      BooleanColumn.array("bool_column_array",
          defaultArrayValue: [true, false]),
    ],
    "With Constraints": [
      BooleanColumn("bool_column", isPrimaryKey: true),
      BooleanColumn("bool_column_2", isUnique: true),
      BooleanColumn("bool_column_3", isNullable: false),
      BooleanColumn.array("bool_column_array", isUnique: true),
      BooleanColumn.array("bool_column_2_array", isUnique: true),
      BooleanColumn.array("bool_column_3_array", isNullable: false),
    ]
  },
  "UUID Columns": {
    "Simple": [
      UUIDColumn("uuid_column"),
      UUIDColumn.array("uuid_column_array"),
    ],
    "With Default": [
      UUIDColumn("uuid_column",
          defaultValue: "12345678-1234-1234-1234-123456789012"),
      UUIDColumn.array("uuid_column_array", defaultArrayValue: [
        "12345678-1234-1234-1234-123456789012",
        "12345678-1234-1234-1234-123456789012"
      ]),
    ],
    "With Constraints": [
      UUIDColumn("uuid_column", isPrimaryKey: true),
      UUIDColumn("uuid_column_2", isUnique: true),
      UUIDColumn("uuid_column_3", isNullable: false),
      UUIDColumn.array("uuid_column_array", isUnique: true),
      UUIDColumn.array("uuid_column_2_array", isUnique: true),
      UUIDColumn.array("uuid_column_3_array", isNullable: true),
    ],
  },
  "DateTime Columns": {
    "Simple": [
      TimestampColumn("timestamp_column"),
      TimestampWithTimeZoneColumn("timestamp_w_tz_column"),
      DateColumn("date_column"),
      IntervalColumn("interval_column"),
      TimestampColumn.array("timestamp_column_array"),
      TimestampWithTimeZoneColumn.array("timestamp_w_tz_column_array"),
      DateColumn.array("date_column_array"),
      IntervalColumn.array("interval_column_array"),
    ],
    "With Arguments": [
      TimestampColumn("timestamp_column", precision: 4),
      TimestampWithTimeZoneColumn("timestamp_w_tz_column", precision: 10),
      DateColumn("date_column"),
      IntervalColumn("interval_column"),
      TimestampColumn.array("timestamp_column_array", precision: 5),
      TimestampWithTimeZoneColumn.array("timestamp_w_tz_column_array",
          precision: 6),
    ],
    "With Default": [
      TimestampColumn("timestamp_column", defaultToCurrentTimeStamp: true),
      TimestampColumn("timestamp_column_2",
          defaultToCurrentTimestampInUTC: true),
      TimestampColumn("timestamp_column_3", defaultValue: DateTime.now()),
      TimestampWithTimeZoneColumn(
        "timestamp_w_tz_column",
        defaultToCurrentTimeStamp: true,
      ),
      TimestampWithTimeZoneColumn(
        "timestamp_w_tz_column_2",
        defaultValue: DateTime.now(),
      ),
      DateColumn("date_column", defaultToCurrentDate: true),
      DateColumn("date_column_2", defaultToCurrentDateInUTC: true),
      DateColumn("date_column_3", defaultValue: DateTime.now()),
      IntervalColumn("interval_column", defaultValue: Interval(century: 1)),
      TimestampColumn.array("timestamp_column_array", defaultArrayValue: [
        DateTime.now(),
        DateTime.now(),
      ]),
      TimestampWithTimeZoneColumn.array("timestamp_w_tz_column_array",
          defaultArrayValue: [
            DateTime.now(),
            DateTime.now(),
          ]),
      DateColumn.array("date_column_array", defaultArrayValue: [
        DateTime.now(),
        DateTime.now(),
      ]),
      IntervalColumn.array("interval_column_array", defaultArrayValue: [
        Interval(century: 1),
        Interval(microsecond: 1, minute: 3),
      ]),
    ],
    "With Constraints": [
      TimestampColumn("timestamp_column", isPrimaryKey: true),
      TimestampWithTimeZoneColumn("timestamp_w_tz_column", isUnique: true),
      DateColumn("date_column", isNullable: false),
      IntervalColumn("interval_column", isUnique: true),
      TimestampColumn.array("timestamp_column_array", isUnique: true),
      TimestampWithTimeZoneColumn.array("timestamp_w_tz_column_array",
          isUnique: true),
      DateColumn.array("date_column_array", isUnique: true),
      IntervalColumn.array("interval_column_array", isUnique: true),
    ],
  },
};
